/**
 * @author Sergio Villarroel Fernández 	svillarr@ucm.es
 *
 *
 */
package Integracion.TransactionManager;

import java.util.concurrent.ConcurrentHashMap;

public class TransactionManagerImp extends TransactionManager {

	private ConcurrentHashMap<Thread, Transaction> transacciones = new ConcurrentHashMap<Thread, Transaction> ();

	@Override
	public Transaction getTransaction() {
		// TODO Auto-generated method stub
		Thread hilo = Thread.currentThread();
		Transaction transacti = null;
		if(this.transacciones !=null){
			transacti= this.transacciones.get(hilo);
		}

		return transacti;

	}

	@Override
	public Transaction newTransaction() {
		
		Thread hilo = Thread.currentThread();
		Transaction transacti = null;
		TransactionFactory factory = TransactionFactory.getInstance();
		transacti = factory.createTransaction();
		this.transacciones.put(hilo, transacti);
		return transacti;
	}

	@Override
	public void deleteTransaction() {
		
		// TODO Auto-generated method stub
		Thread hilo = Thread.currentThread();
		if(this.transacciones !=null){
			this.transacciones.remove(hilo);
			
		}

	}
}